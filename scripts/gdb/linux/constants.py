import gdb
LX_CONFIG_DEBUG_INFO_REDUCED = 0
if 1:
    LX_CLK_GET_RATE_NOCACHE = gdb.parse_and_eval("((((1UL))) << (6))")
LX_SB_RDONLY = gdb.parse_and_eval("((((1UL))) << (0))")
LX_SB_SYNCHRONOUS = gdb.parse_and_eval("((((1UL))) << (4))")
LX_SB_MANDLOCK = gdb.parse_and_eval("((((1UL))) << (6))")
LX_SB_DIRSYNC = gdb.parse_and_eval("((((1UL))) << (7))")
LX_SB_NOATIME = gdb.parse_and_eval("((((1UL))) << (10))")
LX_SB_NODIRATIME = gdb.parse_and_eval("((((1UL))) << (11))")
LX_hrtimer_resolution = gdb.parse_and_eval("hrtimer_resolution")
LX_IRQD_LEVEL = gdb.parse_and_eval("IRQD_LEVEL")
LX_IRQ_HIDDEN = gdb.parse_and_eval("IRQ_HIDDEN")
if 1:
    LX_MOD_TEXT = gdb.parse_and_eval("MOD_TEXT")
    LX_MOD_DATA = gdb.parse_and_eval("MOD_DATA")
    LX_MOD_RODATA = gdb.parse_and_eval("MOD_RODATA")
    LX_MOD_RO_AFTER_INIT = gdb.parse_and_eval("MOD_RO_AFTER_INIT")
LX_MNT_NOSUID = 0x01
LX_MNT_NODEV = 0x02
LX_MNT_NOEXEC = 0x04
LX_MNT_NOATIME = 0x08
LX_MNT_NODIRATIME = 0x10
LX_MNT_RELATIME = 0x20
LX_NR_CPUS = 8192
LX_OF_DT_HEADER = 0xd00dfeed
LX_RADIX_TREE_ENTRY_MASK = gdb.parse_and_eval("3UL")
LX_RADIX_TREE_INTERNAL_NODE = gdb.parse_and_eval("2UL")
LX_RADIX_TREE_MAP_SIZE = gdb.parse_and_eval("(1UL << (0 ? 4 : 6))")
LX_RADIX_TREE_MAP_SHIFT = gdb.parse_and_eval("(0 ? 4 : 6)")
LX_RADIX_TREE_MAP_MASK = gdb.parse_and_eval("((1UL << (0 ? 4 : 6))-1)")
LX_VM_IOREMAP = 0x00000001
LX_VM_ALLOC = 0x00000002
LX_VM_MAP = 0x00000004
LX_VM_USERMAP = 0x00000008
LX_VM_DMA_COHERENT = 0x00000010
if 0:
    LX_PAGE_EXT_OWNER = gdb.parse_and_eval("PAGE_EXT_OWNER")
    LX_PAGE_EXT_OWNER_ALLOCATED = gdb.parse_and_eval("PAGE_EXT_OWNER_ALLOCATED")
LX_SLAB_RED_ZONE = gdb.parse_and_eval("((slab_flags_t )(1U << (_SLAB_RED_ZONE)))")
LX_SLAB_POISON = gdb.parse_and_eval("((slab_flags_t )(1U << (_SLAB_POISON)))")
LX_SLAB_KMALLOC = gdb.parse_and_eval("((slab_flags_t )(1U << (_SLAB_KMALLOC)))")
LX_SLAB_HWCACHE_ALIGN = gdb.parse_and_eval("((slab_flags_t )(1U << (_SLAB_HWCACHE_ALIGN)))")
LX_SLAB_CACHE_DMA = gdb.parse_and_eval("((slab_flags_t )(1U << (_SLAB_CACHE_DMA)))")
LX_SLAB_CACHE_DMA32 = gdb.parse_and_eval("((slab_flags_t )(1U << (_SLAB_CACHE_DMA32)))")
LX_SLAB_STORE_USER = gdb.parse_and_eval("((slab_flags_t )(1U << (_SLAB_STORE_USER)))")
LX_SLAB_PANIC = gdb.parse_and_eval("((slab_flags_t )(1U << (_SLAB_PANIC)))")
LX_CONFIG_GENERIC_CLOCKEVENTS = 1
LX_CONFIG_GENERIC_CLOCKEVENTS_BROADCAST = 1
LX_CONFIG_HIGH_RES_TIMERS = 1
LX_CONFIG_NR_CPUS = 0
LX_CONFIG_OF = 0
LX_CONFIG_TICK_ONESHOT = 1
LX_CONFIG_GENERIC_IRQ_SHOW_LEVEL = 0
LX_CONFIG_X86_LOCAL_APIC = 1
LX_CONFIG_SMP = 1
LX_CONFIG_X86_THERMAL_VECTOR = 1
LX_CONFIG_X86_MCE_THRESHOLD = 1
LX_CONFIG_X86_MCE_AMD = 1
LX_CONFIG_X86_MCE = 1
LX_CONFIG_X86_IO_APIC = 1
LX_CONFIG_KVM = 0
LX_CONFIG_NUMA = 1
LX_CONFIG_ARM64 = 0
LX_CONFIG_ARM64_4K_PAGES = 0
LX_CONFIG_ARM64_16K_PAGES = 0
LX_CONFIG_ARM64_64K_PAGES = 0
if 0:
    LX_CONFIG_ARM64_PA_BITS = CONFIG_ARM64_PA_BITS
    LX_CONFIG_ARM64_VA_BITS = CONFIG_ARM64_VA_BITS
    LX_CONFIG_PAGE_SHIFT = 12
    LX_CONFIG_ARCH_FORCE_MAX_ORDER = CONFIG_ARCH_FORCE_MAX_ORDER
LX_CONFIG_SPARSEMEM = 1
LX_CONFIG_SPARSEMEM_EXTREME = 1
LX_CONFIG_SPARSEMEM_VMEMMAP = 1
LX_CONFIG_KASAN = 0
LX_CONFIG_KASAN_GENERIC = 0
LX_CONFIG_KASAN_SW_TAGS = 0
LX_CONFIG_KASAN_HW_TAGS = 0
if 0 or 0:
    LX_CONFIG_KASAN_SHADOW_OFFSET = CONFIG_KASAN_SHADOW_OFFSET
LX_CONFIG_VMAP_STACK = 1
if 1:
    LX_CONFIG_NODES_SHIFT = 10
LX_CONFIG_DEBUG_VIRTUAL = 0
LX_CONFIG_STACKDEPOT = 1
LX_CONFIG_PAGE_OWNER = 0
LX_CONFIG_SLUB_DEBUG = 1
LX_CONFIG_SLAB_FREELIST_HARDENED = 1
LX_CONFIG_MMU = 1
